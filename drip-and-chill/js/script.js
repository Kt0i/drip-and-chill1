// –û–∂–∏–¥–∞–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', function() {
    // –¢–µ–∫—É—â–∏–π –≥–æ–¥ –≤ —Ñ—É—Ç–µ—Ä–µ (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —ç–ª–µ–º–µ–Ω—Ç–∞)
    const yearElement = document.getElementById('year');
    if (yearElement) {
        yearElement.textContent = new Date().getFullYear();
    }

    // –ë—É—Ä–≥–µ—Ä-–º–µ–Ω—é (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
    const burgerMenu = document.querySelector('.burger-menu');
    const navLinks = document.querySelector('.nav-links');
    
    if (burgerMenu && navLinks) {
        burgerMenu.addEventListener('click', () => {
            navLinks.classList.toggle('active');
            burgerMenu.classList.toggle('active');
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É
        document.querySelectorAll('.nav-links a').forEach(link => {
            link.addEventListener('click', () => {
                navLinks.classList.remove('active');
                burgerMenu.classList.remove('active');
            });
        });
    }

    // –ü–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª –¥–ª—è –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
            e.preventDefault();
            
            const targetId = this.getAttribute('href');
            if (targetId === '#') return;
            
            const targetElement = document.querySelector(targetId);
            if (targetElement) {
                window.scrollTo({
                    top: targetElement.offsetTop - 80,
                    behavior: 'smooth'
                });
            }
        });
    });

    // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∞–ø–∫–∞ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    const header = document.querySelector('header');
    if (header) {
        window.addEventListener('scroll', () => {
            if (window.scrollY > 50) {
                header.style.boxShadow = '0 2px 10px rgba(0, 0, 0, 0.1)';
                header.style.padding = '15px 0';
            } else {
                header.style.boxShadow = 'none';
                header.style.padding = '25px 0';
            }
        });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã (—É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ —Ñ–æ—Ä–º–∞)
    const orderForm = document.getElementById('orderForm') || document.querySelector('.order-form');
    if (orderForm) {
        orderForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            // –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ª—É—á—à–µ –ø–æ–ª—É—á–∞—Ç—å —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
            const botToken = '7540879502:AAHwXlipdBICEEsrzID9OLZynJUO49uN3fg';
    const chatId = '5890544728';
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const formData = new FormData(this);
    let message = 'üõéÔ∏è <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!</b>\n\n';
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–ª–µ–π
    const fieldNames = {
        name: 'üë§ –ò–º—è',
        phone: 'üìû –¢–µ–ª–µ—Ñ–æ–Ω',
        product: '‚òï –¢–æ–≤–∞—Ä',
        address: 'üè† –ê–¥—Ä–µ—Å',
        comments: 'üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'
    };
    
    // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    for (let [key, value] of formData.entries()) {
        const displayName = fieldNames[key] || key;
        message += `${displayName}: <code>${value || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}</code>\n`;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
    message += `\n‚è±Ô∏è <i>${new Date().toLocaleString()}</i>`;
    
    try {
        const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                chat_id: chatId,
                text: message,
                parse_mode: 'HTML' // –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML –≤–º–µ—Å—Ç–æ Markdown
            })
        });
        
        if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ Telegram API');
        
        alert('‚úÖ –ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç! –ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.');
        this.reset();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º: +7 XXX XXX-XX-XX');
    }
});

    }
});